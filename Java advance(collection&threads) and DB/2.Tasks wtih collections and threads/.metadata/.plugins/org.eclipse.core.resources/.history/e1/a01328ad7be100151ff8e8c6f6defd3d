package TestLib3;

import java.time.Duration;
import java.time.LocalDateTime;
import java.util.HashMap;
import java.util.Map;

public class LibraryMan extends Thread {

	private Map<ReadingMaterial, Double> materialsToFollow;
	
	public LibraryMan(){
		this.setDaemon(true);
		materialsToFollow = new HashMap<ReadingMaterial, Double>();
	}
	
	@Override
	public void run() {
		while(true){
			try {
				Thread.sleep(1000);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
			for(ReadingMaterial r:materialsToFollow.keySet()){
				try {
					int secForThisMaterial = r.getSecondsForTake();
					LocalDateTime time = r.getTimeTaken();
					
					Duration d = Duration.between(time, LocalDateTime.now());
					
					if(d.getSeconds()>secForThisMaterial){
						
					}
					
				} catch (LibraryException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		}
	}

	public void addMaterialToWatch(ReadingMaterial readingMaterial) {
		materialsToFollow.put(readingMaterial, readingMaterial.getPrice());
		
	}
}
